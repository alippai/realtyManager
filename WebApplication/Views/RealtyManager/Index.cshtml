@model PagedList.IPagedList<RealtyManager.Models.Realty>

<h2>Find your dream</h2>

@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("search", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" /></p>
}

<table class="table table-striped">
    <tr>
        <th>
            @Html.ActionLink("Address","Index", new { sortOrder=ViewBag.AddressSortParm,  currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Size","Index", new { sortOrder=ViewBag.SizeSortParm,  currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Type","Index", new { sortOrder=ViewBag.TypeSortParm,  currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Room","Index", new { sortOrder=ViewBag.RoomSortParm,  currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Price","Index", new { sortOrder=ViewBag.PriceSortParm,  currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>Operations</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Size)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Room)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            <a href="@Url.Action("Details",new { id=item.RealtyId })" class="btn btn-primary btn-small"><i class="icon-eye-open icon-white"></i> Details</a>
        </td>
    </tr>
}

</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>